@page "/stocklist"
@using StocksApp.Data;
@using System.Text.Json;
@inject IHttpClientFactory _clientFactory
@inject IDbContextFactory<StockAppDbContext> ctxFactory
@inject NavigationManager NavManager
<h1>StockList</h1>

@if(stocks is null)
{
    <div>Loading...</div>
}
else
{
    <MudTable Items="stocks"Hover="true" >
       <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10,20,int.MaxValue}" />
       </PagerContent>
        <HeaderContent>
                <MudTh>Stock</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Current Price</MudTh>
                <MudTh>Prev Close</MudTh>
                <MudTh>Price Change</MudTh>
                <MudTh>% Change</MudTh>
        </HeaderContent>
        <RowTemplate>
                <MudTd DataLabel="Stock">
                    <MudButton
                        Variant="Variant.Filled"
                        Color="Color.Secondary"
                        OnClick="(()=>GoToStockView(context))"
                    >View Stock</MudButton> @context.symbol
                </MudTd>
                <MudTd DataLabel="Name">@context.shortName</MudTd>
                <MudTd DataLabel="Current Price">@context.regularMarketPrice</MudTd>
                <MudTd DataLabel="Prev Close">@context.regularMarketPreviousClose</MudTd>
                <MudTd DataLabel="Price Change">@context.regularMarketChange</MudTd>
                <MudTd DataLabel="% Change">@context.regularMarketChangePercent</MudTd>
       </RowTemplate>
    </MudTable>
}

@code {
    Stock[] stocks;
    StockIdentifierList stockIds = new StockIdentifierList();

    // TODO: link to individual Stock View

    protected async override Task OnInitializedAsync()
    {
        var client = _clientFactory.CreateClient();
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                RequestUri = new Uri($"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes?region=US&symbols={stockIds.SymbolString}"),
                Headers =
                {
                    { "X-RapidAPI-Key", "22cec8c348mshb9ff4f2d3e09e36p13b6f6jsnb90a0998a29b" },
                    { "X-RapidAPI-Host", "apidojo-yahoo-finance-v1.p.rapidapi.com" }
                },
            };
        using (var response = await client.SendAsync(request))
        {
            response.EnsureSuccessStatusCode();
            var content = await response.Content.ReadFromJsonAsync<ApiStockModel>();

            stocks = content.quoteResponse.result;
        }

        AddStockInfo(stocks);

    }



    private async Task AddStockInfo(Stock[] stocklist)
    {
        using var ctx = ctxFactory.CreateDbContext();
        foreach (var stock in stocklist)
        {
            var databaseStock = ctx.PortfolioStockModel.FirstOrDefault(s => s.symbol == stock.symbol);
            if (databaseStock is not null)
            {
                databaseStock.PreviousClose = stock.regularMarketPreviousClose;
                databaseStock.Open = stock.regularMarketOpen;
                databaseStock.Price = stock.regularMarketPrice;
                databaseStock.Change = stock.regularMarketChange;
                databaseStock.ChangePercent = stock.regularMarketChangePercent;

                ctx.PortfolioStockModel.Update(databaseStock);

            }
            else
            {

                PortfolioStockModel newStock = new PortfolioStockModel
                    {
                        shortName = stock.shortName,
                        symbol = stock.symbol,
                        exchange = stock.exchange,
                        currency = stock.currency,
                        PreviousClose = stock.regularMarketPreviousClose,
                        Open = stock.regularMarketOpen,
                        Price = stock.regularMarketPrice,
                        Change = stock.regularMarketChange,
                        ChangePercent = stock.regularMarketChangePercent
                    };

                ctx.PortfolioStockModel.Add(newStock);
            }
            await ctx.SaveChangesAsync();
        }
    }

    private void GoToStockView(Stock stock)
    {
        using var ctx = ctxFactory.CreateDbContext();
        var DbStock = ctx.PortfolioStockModel
        .Where(s => s.symbol == stock.symbol)
        .FirstOrDefault();
        NavManager.NavigateTo($"/stocklist/{DbStock.Id}");
    }
}
