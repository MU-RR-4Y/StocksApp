// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StocksApp.Models;

#nullable disable

namespace StocksApp.Migrations
{
    [DbContext(typeof(StockAppDbContext))]
    [Migration("20231017085648_renamedBVorderstabletoInitialValueOrders")]
    partial class renamedBVorderstabletoInitialValueOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StocksApp.Models.FX_models.FxRates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GBPtoUSD")
                        .HasColumnType("float");

                    b.Property<double>("USDtoGBP")
                        .HasColumnType("float");

                    b.Property<int>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FxRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GBPtoUSD = 1.0,
                            USDtoGBP = 1.0,
                            timestamp = 1
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Holdings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("averagePrice")
                        .HasColumnType("float");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("currentPerformance")
                        .HasColumnType("float");

                    b.Property<double>("currentPrice")
                        .HasColumnType("float");

                    b.Property<double>("currentValue")
                        .HasColumnType("float");

                    b.Property<double>("initialValue")
                        .HasColumnType("float");

                    b.Property<int>("numberofShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("Holdings");
                });

            modelBuilder.Entity("StocksApp.Models.InitialValueOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BookValueOrder")
                        .HasColumnType("bit");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fxRate")
                        .HasColumnType("float");

                    b.Property<double>("gbpCashValue")
                        .HasColumnType("float");

                    b.Property<int>("numberOfShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("InitialValueOrders");
                });

            modelBuilder.Entity("StocksApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fxRate")
                        .HasColumnType("float");

                    b.Property<double>("gbpCashValue")
                        .HasColumnType("float");

                    b.Property<int>("numberOfShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StocksApp.Models.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("cash")
                        .HasColumnType("float");

                    b.Property<double>("currentPerformance")
                        .HasColumnType("float");

                    b.Property<double>("currentValue")
                        .HasColumnType("float");

                    b.Property<double>("initialValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            cash = 50000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        },
                        new
                        {
                            Id = 2,
                            cash = 76000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        },
                        new
                        {
                            Id = 3,
                            cash = 25000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("regularMarketChange")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketChangePercent")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketDayHigh")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketDayLow")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketOpen")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketPreviousClose")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketPrice")
                        .HasColumnType("float");

                    b.Property<int>("regularMarketTime")
                        .HasColumnType("int");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StocksApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortfolioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            LastName = "Test",
                            PortfolioId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Test",
                            LastName = "User",
                            PortfolioId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "User",
                            LastName = "Admin",
                            PortfolioId = 3
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Holdings", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("holdings")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.InitialValueOrder", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("initialValueOrders")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.Order", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("orders")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.User", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", "userPortfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userPortfolio");
                });

            modelBuilder.Entity("StocksApp.Models.Portfolio", b =>
                {
                    b.Navigation("holdings");

                    b.Navigation("initialValueOrders");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
