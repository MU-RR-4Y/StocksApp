// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StocksApp.Models;

#nullable disable

namespace StocksApp.Migrations
{
    [DbContext(typeof(StockAppDbContext))]
    [Migration("20231101164902_addStockSeedInfo")]
    partial class addStockSeedInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StocksApp.Models.FX_models.FxRates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GBPtoUSD")
                        .HasColumnType("float");

                    b.Property<double>("USDtoGBP")
                        .HasColumnType("float");

                    b.Property<int>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FxRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GBPtoUSD = 1.0,
                            USDtoGBP = 1.0,
                            timestamp = 1
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Holdings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("averagePrice")
                        .HasColumnType("float");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("currentPerformance")
                        .HasColumnType("float");

                    b.Property<double>("currentPrice")
                        .HasColumnType("float");

                    b.Property<double>("currentValue")
                        .HasColumnType("float");

                    b.Property<double>("initialValue")
                        .HasColumnType("float");

                    b.Property<int>("numberofShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("Holdings");
                });

            modelBuilder.Entity("StocksApp.Models.InitialValueOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("InitialValOrder")
                        .HasColumnType("bit");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fxRate")
                        .HasColumnType("float");

                    b.Property<double>("gbpCashValue")
                        .HasColumnType("float");

                    b.Property<int>("numberOfShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("InitialValueOrders");
                });

            modelBuilder.Entity("StocksApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fxRate")
                        .HasColumnType("float");

                    b.Property<double>("gbpCashValue")
                        .HasColumnType("float");

                    b.Property<int>("numberOfShares")
                        .HasColumnType("int");

                    b.Property<int>("portfolioId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("portfolioId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StocksApp.Models.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("cash")
                        .HasColumnType("float");

                    b.Property<double>("currentPerformance")
                        .HasColumnType("float");

                    b.Property<double>("currentValue")
                        .HasColumnType("float");

                    b.Property<double>("initialValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            cash = 50000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        },
                        new
                        {
                            Id = 2,
                            cash = 76000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        },
                        new
                        {
                            Id = 3,
                            cash = 25000.0,
                            currentPerformance = 0.0,
                            currentValue = 0.0,
                            initialValue = 0.0
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("regularMarketChange")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketChangePercent")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketDayHigh")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketDayLow")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketOpen")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketPreviousClose")
                        .HasColumnType("float");

                    b.Property<double>("regularMarketPrice")
                        .HasColumnType("float");

                    b.Property<int>("regularMarketTime")
                        .HasColumnType("int");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.2600020999999999,
                            regularMarketChangePercent = 1.4208413,
                            regularMarketDayHigh = 90.135000000000005,
                            regularMarketDayLow = 88.549999999999997,
                            regularMarketOpen = 88.920000000000002,
                            regularMarketPreviousClose = 88.680000000000007,
                            regularMarketPrice = 89.939999999999998,
                            regularMarketTime = 1697486447,
                            shortName = "3M Company",
                            symbol = "MMM"
                        },
                        new
                        {
                            Id = 2,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.9799804999999999,
                            regularMarketChangePercent = 0.36080990000000002,
                            regularMarketDayHigh = 555.57000000000005,
                            regularMarketDayLow = 545.69039999999995,
                            regularMarketOpen = 553.17999999999995,
                            regularMarketPreviousClose = 548.75999999999999,
                            regularMarketPrice = 550.74000000000001,
                            regularMarketTime = 1697486401,
                            shortName = "Adobe Inc.",
                            symbol = "ADBE"
                        },
                        new
                        {
                            Id = 3,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.3700026999999999,
                            regularMarketChangePercent = 1.3036471999999999,
                            regularMarketDayHigh = 107.48,
                            regularMarketDayLow = 105.03,
                            regularMarketOpen = 105.42,
                            regularMarketPreviousClose = 105.09,
                            regularMarketPrice = 106.45999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Advanced Micro Devices, Inc.",
                            symbol = "AMD"
                        },
                        new
                        {
                            Id = 4,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.7350006,
                            regularMarketChangePercent = 1.2631047,
                            regularMarketDayHigh = 139.63,
                            regularMarketDayLow = 137.99000000000001,
                            regularMarketOpen = 138.16999999999999,
                            regularMarketPreviousClose = 137.36000000000001,
                            regularMarketPrice = 139.095,
                            regularMarketTime = 1697486447,
                            shortName = "Alphabet Inc.",
                            symbol = "GOOGL"
                        },
                        new
                        {
                            Id = 5,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.9100037000000001,
                            regularMarketChangePercent = 1.3782679,
                            regularMarketDayHigh = 140.905,
                            regularMarketDayLow = 139.33000000000001,
                            regularMarketOpen = 139.72999999999999,
                            regularMarketPreviousClose = 138.58000000000001,
                            regularMarketPrice = 140.49000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Alphabet Inc.",
                            symbol = "GOOG"
                        },
                        new
                        {
                            Id = 6,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 2.7600098000000002,
                            regularMarketChangePercent = 2.1265196999999998,
                            regularMarketDayHigh = 133.06999999999999,
                            regularMarketDayLow = 130.42500000000001,
                            regularMarketOpen = 130.69,
                            regularMarketPreviousClose = 129.78999999999999,
                            regularMarketPrice = 132.55000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Amazon.com, Inc.",
                            symbol = "AMZN"
                        },
                        new
                        {
                            Id = 7,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.6899872,
                            regularMarketChangePercent = 1.1184561,
                            regularMarketDayHigh = 153.41,
                            regularMarketDayLow = 151.20500000000001,
                            regularMarketOpen = 152.37,
                            regularMarketPreviousClose = 151.09999999999999,
                            regularMarketPrice = 152.78999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "American Express Company",
                            symbol = "AXP"
                        },
                        new
                        {
                            Id = 8,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 2.7799988,
                            regularMarketChangePercent = 0.97852826000000004,
                            regularMarketDayHigh = 287.81,
                            regularMarketDayLow = 283.81,
                            regularMarketOpen = 284.5,
                            regularMarketPreviousClose = 284.10000000000002,
                            regularMarketPrice = 286.88,
                            regularMarketTime = 1697486447,
                            shortName = "Amgen Inc.",
                            symbol = "AMGN"
                        },
                        new
                        {
                            Id = 9,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = -0.13000487999999999,
                            regularMarketChangePercent = -0.072689340000000005,
                            regularMarketDayHigh = 179.07499999999999,
                            regularMarketDayLow = 176.50999999999999,
                            regularMarketOpen = 176.75,
                            regularMarketPreviousClose = 178.84999999999999,
                            regularMarketPrice = 178.72,
                            regularMarketTime = 1697486447,
                            shortName = "Apple Inc.",
                            symbol = "AAPL"
                        },
                        new
                        {
                            Id = 10,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = -0.13999939,
                            regularMarketChangePercent = -0.099191860000000007,
                            regularMarketDayHigh = 142.56,
                            regularMarketDayLow = 139.73519999999999,
                            regularMarketOpen = 141.75999999999999,
                            regularMarketPreviousClose = 141.13999999999999,
                            regularMarketPrice = 141.0,
                            regularMarketTime = 1697486447,
                            shortName = "Applied Materials, Inc.",
                            symbol = "AMAT"
                        },
                        new
                        {
                            Id = 11,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.7599944999999999,
                            regularMarketChangePercent = 0.71110885999999995,
                            regularMarketDayHigh = 250.11000000000001,
                            regularMarketDayLow = 247.66999999999999,
                            regularMarketOpen = 248.91,
                            regularMarketPreviousClose = 247.5,
                            regularMarketPrice = 249.25999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Automatic Data Processing, Inc.",
                            symbol = "ADP"
                        },
                        new
                        {
                            Id = 12,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.019989013999999999,
                            regularMarketChangePercent = 0.010810131000000001,
                            regularMarketDayHigh = 186.22999999999999,
                            regularMarketDayLow = 182.5,
                            regularMarketOpen = 185.91,
                            regularMarketPreviousClose = 184.91,
                            regularMarketPrice = 184.93000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Boeing Company (The)",
                            symbol = "BA"
                        },
                        new
                        {
                            Id = 13,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 16.389893000000001,
                            regularMarketChangePercent = 0.55557449999999997,
                            regularMarketDayHigh = 3000.1399999999999,
                            regularMarketDayLow = 2961.165,
                            regularMarketOpen = 2973.6999999999998,
                            regularMarketPreviousClose = 2950.0799999999999,
                            regularMarketPrice = 2966.4699999999998,
                            regularMarketTime = 1697486447,
                            shortName = "Booking Holdings Inc. Common Sty",
                            symbol = "BKNG"
                        },
                        new
                        {
                            Id = 14,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 19.390014999999899,
                            regularMarketChangePercent = 2.1954769999999999,
                            regularMarketDayHigh = 915.78499999999997,
                            regularMarketDayLow = 890.97000000000003,
                            regularMarketOpen = 890.97000000000003,
                            regularMarketPreviousClose = 883.17999999999995,
                            regularMarketPrice = 902.57000000000005,
                            regularMarketTime = 1697486447,
                            shortName = "Broadcom Inc.",
                            symbol = "AVGO"
                        },
                        new
                        {
                            Id = 15,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 2.850006,
                            regularMarketChangePercent = 1.0636733,
                            regularMarketDayHigh = 273.97199999999998,
                            regularMarketDayLow = 269.57999999999998,
                            regularMarketOpen = 272.12,
                            regularMarketPreviousClose = 267.94,
                            regularMarketPrice = 270.79000000000002,
                            regularMarketTime = 1697486447,
                            shortName = "Caterpillar, Inc.",
                            symbol = "CAT"
                        },
                        new
                        {
                            Id = 16,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.3399962999999999,
                            regularMarketChangePercent = 0.8167721,
                            regularMarketDayHigh = 165.81,
                            regularMarketDayLow = 163.84999999999999,
                            regularMarketOpen = 165.34,
                            regularMarketPreviousClose = 164.06,
                            regularMarketPrice = 165.40000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Chevron Corporation",
                            symbol = "CVX"
                        },
                        new
                        {
                            Id = 17,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 0.3899994,
                            regularMarketChangePercent = 0.72531040000000002,
                            regularMarketDayHigh = 54.585000000000001,
                            regularMarketDayLow = 54.040399999999998,
                            regularMarketOpen = 54.07,
                            regularMarketPreviousClose = 53.770000000000003,
                            regularMarketPrice = 54.159999999999997,
                            regularMarketTime = 1697486447,
                            shortName = "Cisco Systems, Inc.",
                            symbol = "CSCO"
                        },
                        new
                        {
                            Id = 18,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.54000090000000001,
                            regularMarketChangePercent = 1.0209887,
                            regularMarketDayHigh = 53.560000000000002,
                            regularMarketDayLow = 52.840000000000003,
                            regularMarketOpen = 53.020000000000003,
                            regularMarketPreviousClose = 52.890000000000001,
                            regularMarketPrice = 53.43,
                            regularMarketTime = 1697486447,
                            shortName = "Coca-Cola Company (The)",
                            symbol = "KO"
                        },
                        new
                        {
                            Id = 19,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 0.43999863,
                            regularMarketChangePercent = 1.0043337000000001,
                            regularMarketDayHigh = 44.325000000000003,
                            regularMarketDayLow = 43.765000000000001,
                            regularMarketOpen = 44.049999999999997,
                            regularMarketPreviousClose = 43.810000000000002,
                            regularMarketPrice = 44.25,
                            regularMarketTime = 1697486447,
                            shortName = "Comcast Corporation",
                            symbol = "CMCSA"
                        },
                        new
                        {
                            Id = 20,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 5.3999633999999999,
                            regularMarketChangePercent = 0.95264329999999997,
                            regularMarketDayHigh = 574.09659999999997,
                            regularMarketDayLow = 568.51999999999998,
                            regularMarketOpen = 569.69000000000005,
                            regularMarketPreviousClose = 566.84000000000003,
                            regularMarketPrice = 572.24000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Costco Wholesale Corporation",
                            symbol = "COST"
                        },
                        new
                        {
                            Id = 21,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.5499954,
                            regularMarketChangePercent = 1.9961305,
                            regularMarketDayHigh = 79.444999999999993,
                            regularMarketDayLow = 77.659999999999997,
                            regularMarketOpen = 77.739999999999995,
                            regularMarketPreviousClose = 77.650000000000006,
                            regularMarketPrice = 79.200000000000003,
                            regularMarketTime = 1697486447,
                            shortName = "Gilead Sciences, Inc.",
                            symbol = "GILD"
                        },
                        new
                        {
                            Id = 22,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 5.0900270000000001,
                            regularMarketChangePercent = 1.6456602,
                            regularMarketDayHigh = 315.89999999999998,
                            regularMarketDayLow = 310.25,
                            regularMarketOpen = 313.18000000000001,
                            regularMarketPreviousClose = 309.30000000000001,
                            regularMarketPrice = 314.38999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Goldman Sachs Group, Inc. (The)",
                            symbol = "GS"
                        },
                        new
                        {
                            Id = 23,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 5.4099729999999999,
                            regularMarketChangePercent = 1.8532382000000001,
                            regularMarketDayHigh = 298.37,
                            regularMarketDayLow = 293.58010000000002,
                            regularMarketOpen = 294.43000000000001,
                            regularMarketPreviousClose = 291.92000000000002,
                            regularMarketPrice = 297.32999999999998,
                            regularMarketTime = 1697486447,
                            shortName = "Home Depot, Inc. (The)",
                            symbol = "HD"
                        },
                        new
                        {
                            Id = 24,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 2.6699982000000002,
                            regularMarketChangePercent = 1.4545642999999999,
                            regularMarketDayHigh = 187.5,
                            regularMarketDayLow = 185.13,
                            regularMarketOpen = 185.61000000000001,
                            regularMarketPreviousClose = 183.56,
                            regularMarketPrice = 186.22999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Honeywell International Inc.",
                            symbol = "HON"
                        },
                        new
                        {
                            Id = 25,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 0.59000014999999995,
                            regularMarketChangePercent = 1.6402562000000001,
                            regularMarketDayHigh = 36.939999999999998,
                            regularMarketDayLow = 36.079999999999998,
                            regularMarketOpen = 36.140000000000001,
                            regularMarketPreviousClose = 35.969999999999999,
                            regularMarketPrice = 36.560000000000002,
                            regularMarketTime = 1697486447,
                            shortName = "Intel Corporation",
                            symbol = "INTC"
                        },
                        new
                        {
                            Id = 26,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.75,
                            regularMarketChangePercent = 0.54167264999999998,
                            regularMarketDayHigh = 139.78,
                            regularMarketDayLow = 138.52000000000001,
                            regularMarketOpen = 139.28,
                            regularMarketPreviousClose = 138.46000000000001,
                            regularMarketPrice = 139.21000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "International Business Machines",
                            symbol = "IBM"
                        },
                        new
                        {
                            Id = 27,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 7.8500366000000001,
                            regularMarketChangePercent = 1.4726642000000001,
                            regularMarketDayHigh = 543.5,
                            regularMarketDayLow = 534.47000000000003,
                            regularMarketOpen = 539.84000000000003,
                            regularMarketPreviousClose = 533.04999999999995,
                            regularMarketPrice = 540.89999999999998,
                            regularMarketTime = 1697486447,
                            shortName = "Intuit Inc.",
                            symbol = "INTU"
                        },
                        new
                        {
                            Id = 28,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.67999270000000001,
                            regularMarketChangePercent = 0.43353049999999999,
                            regularMarketDayHigh = 158.25,
                            regularMarketDayLow = 156.84,
                            regularMarketOpen = 157.81999999999999,
                            regularMarketPreviousClose = 156.84999999999999,
                            regularMarketPrice = 157.53,
                            regularMarketTime = 1697486447,
                            shortName = "Johnson & Johnson",
                            symbol = "JNJ"
                        },
                        new
                        {
                            Id = 29,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = -0.14999390000000001,
                            regularMarketChangePercent = -0.10134723,
                            regularMarketDayHigh = 149.52000000000001,
                            regularMarketDayLow = 146.72,
                            regularMarketOpen = 149.44999999999999,
                            regularMarketPreviousClose = 148.0,
                            regularMarketPrice = 147.84999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "JP Morgan Chase & Co.",
                            symbol = "JPM"
                        },
                        new
                        {
                            Id = 30,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.6300049000000001,
                            regularMarketChangePercent = 0.65643949999999995,
                            regularMarketDayHigh = 250.49000000000001,
                            regularMarketDayLow = 248.06999999999999,
                            regularMarketOpen = 249.22,
                            regularMarketPreviousClose = 248.31,
                            regularMarketPrice = 249.94,
                            regularMarketTime = 1697486447,
                            shortName = "McDonald's Corporation",
                            symbol = "MCD"
                        },
                        new
                        {
                            Id = 31,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.12999725000000001,
                            regularMarketChangePercent = 0.12498534,
                            regularMarketDayHigh = 105.37,
                            regularMarketDayLow = 104.06,
                            regularMarketOpen = 104.2,
                            regularMarketPreviousClose = 104.01000000000001,
                            regularMarketPrice = 104.14,
                            regularMarketTime = 1697486447,
                            shortName = "Merck & Company, Inc.",
                            symbol = "MRK"
                        },
                        new
                        {
                            Id = 32,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 6.4599915000000001,
                            regularMarketChangePercent = 2.0528111,
                            regularMarketDayHigh = 321.80000000000001,
                            regularMarketDayLow = 315.51999999999998,
                            regularMarketOpen = 318.63999999999999,
                            regularMarketPreviousClose = 314.69,
                            regularMarketPrice = 321.14999999999998,
                            regularMarketTime = 1697486447,
                            shortName = "Meta Platforms, Inc.",
                            symbol = "META"
                        },
                        new
                        {
                            Id = 33,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 4.9100036999999999,
                            regularMarketChangePercent = 1.4981854999999999,
                            regularMarketDayHigh = 336.08999999999997,
                            regularMarketDayLow = 330.60000000000002,
                            regularMarketOpen = 331.05000000000001,
                            regularMarketPreviousClose = 327.73000000000002,
                            regularMarketPrice = 332.63999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Microsoft Corporation",
                            symbol = "MSFT"
                        },
                        new
                        {
                            Id = 34,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.0900002,
                            regularMarketChangePercent = 1.7714938,
                            regularMarketDayHigh = 62.945,
                            regularMarketDayLow = 61.829999999999998,
                            regularMarketOpen = 61.869999999999997,
                            regularMarketPreviousClose = 61.530000000000001,
                            regularMarketPrice = 62.619999999999997,
                            regularMarketTime = 1697486447,
                            shortName = "Mondelez International, Inc.",
                            symbol = "MDLZ"
                        },
                        new
                        {
                            Id = 35,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 5.1400145999999998,
                            regularMarketChangePercent = 1.4451233000000001,
                            regularMarketDayHigh = 363.07990000000001,
                            regularMarketDayLow = 354.76999999999998,
                            regularMarketOpen = 356.20999999999998,
                            regularMarketPreviousClose = 355.68000000000001,
                            regularMarketPrice = 360.81999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Netflix, Inc.",
                            symbol = "NFLX"
                        },
                        new
                        {
                            Id = 36,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 2.1299972999999999,
                            regularMarketChangePercent = 2.1319157999999998,
                            regularMarketDayHigh = 102.58,
                            regularMarketDayLow = 99.599999999999994,
                            regularMarketOpen = 99.719999999999999,
                            regularMarketPreviousClose = 99.909999999999997,
                            regularMarketPrice = 102.04000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Nike, Inc.",
                            symbol = "NKE"
                        },
                        new
                        {
                            Id = 37,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 6.3400270000000001,
                            regularMarketChangePercent = 1.3946080000000001,
                            regularMarketDayHigh = 462.25,
                            regularMarketDayLow = 449.12,
                            regularMarketOpen = 450.63,
                            regularMarketPreviousClose = 454.61000000000001,
                            regularMarketPrice = 460.94999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "NVIDIA Corporation",
                            symbol = "NVDA"
                        },
                        new
                        {
                            Id = 38,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.0800018,
                            regularMarketChangePercent = 0.67500114,
                            regularMarketDayHigh = 161.94999999999999,
                            regularMarketDayLow = 159.80000000000001,
                            regularMarketOpen = 161.0,
                            regularMarketPreviousClose = 160.0,
                            regularMarketPrice = 161.08000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Pepsico, Inc.",
                            symbol = "PEP"
                        },
                        new
                        {
                            Id = 39,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.3800049000000001,
                            regularMarketChangePercent = 0.95376660000000002,
                            regularMarketDayHigh = 147.06,
                            regularMarketDayLow = 145.46000000000001,
                            regularMarketOpen = 145.86000000000001,
                            regularMarketPreviousClose = 144.69,
                            regularMarketPrice = 146.06999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Procter & Gamble Company (The)",
                            symbol = "PG"
                        },
                        new
                        {
                            Id = 40,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.8499985000000001,
                            regularMarketChangePercent = 1.7025570000000001,
                            regularMarketDayHigh = 111.05,
                            regularMarketDayLow = 108.95,
                            regularMarketOpen = 109.09,
                            regularMarketPreviousClose = 108.66,
                            regularMarketPrice = 110.51000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "QUALCOMM Incorporated",
                            symbol = "QCOM"
                        },
                        new
                        {
                            Id = 41,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 3.9400024,
                            regularMarketChangePercent = 1.9258040999999999,
                            regularMarketDayHigh = 209.49000000000001,
                            regularMarketDayLow = 205.03999999999999,
                            regularMarketOpen = 205.84,
                            regularMarketPreviousClose = 204.59,
                            regularMarketPrice = 208.53,
                            regularMarketTime = 1697486447,
                            shortName = "Salesforce, Inc.",
                            symbol = "CRM"
                        },
                        new
                        {
                            Id = 42,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 2.1699982000000002,
                            regularMarketChangePercent = 2.3721009999999998,
                            regularMarketDayHigh = 93.855000000000004,
                            regularMarketDayLow = 91.854900000000001,
                            regularMarketOpen = 92.170000000000002,
                            regularMarketPreviousClose = 91.480000000000004,
                            regularMarketPrice = 93.650000000000006,
                            regularMarketTime = 1697486447,
                            shortName = "Starbucks Corporation",
                            symbol = "SBUX"
                        },
                        new
                        {
                            Id = 43,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 2.8000029999999998,
                            regularMarketChangePercent = 1.1150059999999999,
                            regularMarketDayHigh = 255.3999,
                            regularMarketDayLow = 248.47999999999999,
                            regularMarketOpen = 250.05000000000001,
                            regularMarketPreviousClose = 251.12,
                            regularMarketPrice = 253.91999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Tesla, Inc.",
                            symbol = "TSLA"
                        },
                        new
                        {
                            Id = 44,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.550003,
                            regularMarketChangePercent = 1.0147318999999999,
                            regularMarketDayHigh = 154.72499999999999,
                            regularMarketDayLow = 153.09999999999999,
                            regularMarketOpen = 153.36000000000001,
                            regularMarketPreviousClose = 152.75,
                            regularMarketPrice = 154.30000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Texas Instruments Incorporated",
                            symbol = "TXN"
                        },
                        new
                        {
                            Id = 45,
                            currency = "USD",
                            exchange = "NMS",
                            regularMarketChange = 1.5700073000000001,
                            regularMarketChangePercent = 1.1082145000000001,
                            regularMarketDayHigh = 143.66999999999999,
                            regularMarketDayLow = 142.06,
                            regularMarketOpen = 142.88,
                            regularMarketPreviousClose = 141.66999999999999,
                            regularMarketPrice = 143.24000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "T-Mobile US, Inc.",
                            symbol = "TMUS"
                        },
                        new
                        {
                            Id = 46,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = -1.3699950999999999,
                            regularMarketChangePercent = -0.25398500000000002,
                            regularMarketDayHigh = 546.77999999999997,
                            regularMarketDayLow = 536.12,
                            regularMarketOpen = 543.17999999999995,
                            regularMarketPreviousClose = 539.39999999999998,
                            regularMarketPrice = 538.02999999999997,
                            regularMarketTime = 1697486447,
                            shortName = "UnitedHealth Group Incorporated",
                            symbol = "UNH"
                        },
                        new
                        {
                            Id = 47,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 0.57999990000000001,
                            regularMarketChangePercent = 1.8910985,
                            regularMarketDayHigh = 31.32,
                            regularMarketDayLow = 30.620000000000001,
                            regularMarketOpen = 30.84,
                            regularMarketPreviousClose = 30.670000000000002,
                            regularMarketPrice = 31.25,
                            regularMarketTime = 1697486447,
                            shortName = "Verizon Communications Inc.",
                            symbol = "VZ"
                        },
                        new
                        {
                            Id = 48,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 2.4000092,
                            regularMarketChangePercent = 1.0098073000000001,
                            regularMarketDayHigh = 240.71000000000001,
                            regularMarketDayLow = 238.33000000000001,
                            regularMarketOpen = 239.0,
                            regularMarketPreviousClose = 237.66999999999999,
                            regularMarketPrice = 240.06999999999999,
                            regularMarketTime = 1697486447,
                            shortName = "Visa Inc.",
                            symbol = "V"
                        },
                        new
                        {
                            Id = 49,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.3800049000000001,
                            regularMarketChangePercent = 0.86342039999999998,
                            regularMarketDayHigh = 162.08000000000001,
                            regularMarketDayLow = 160.31999999999999,
                            regularMarketOpen = 160.53999999999999,
                            regularMarketPreviousClose = 159.83000000000001,
                            regularMarketPrice = 161.21000000000001,
                            regularMarketTime = 1697486447,
                            shortName = "Walmart Inc.",
                            symbol = "WMT"
                        },
                        new
                        {
                            Id = 50,
                            currency = "USD",
                            exchange = "NYQ",
                            regularMarketChange = 1.3600006,
                            regularMarketChangePercent = 1.6123304000000001,
                            regularMarketDayHigh = 85.924999999999997,
                            regularMarketDayLow = 84.310000000000002,
                            regularMarketOpen = 84.310000000000002,
                            regularMarketPreviousClose = 84.349999999999994,
                            regularMarketPrice = 85.709999999999994,
                            regularMarketTime = 1697486447,
                            shortName = "Walt Disney Company (The)",
                            symbol = "DIS"
                        });
                });

            modelBuilder.Entity("StocksApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortfolioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            LastName = "Test",
                            PortfolioId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Test",
                            LastName = "User",
                            PortfolioId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "User",
                            LastName = "Admin",
                            PortfolioId = 3
                        });
                });

            modelBuilder.Entity("StocksApp.Models.Holdings", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("holdings")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.InitialValueOrder", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("initialValueOrders")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.Order", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", null)
                        .WithMany("orders")
                        .HasForeignKey("portfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StocksApp.Models.User", b =>
                {
                    b.HasOne("StocksApp.Models.Portfolio", "userPortfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userPortfolio");
                });

            modelBuilder.Entity("StocksApp.Models.Portfolio", b =>
                {
                    b.Navigation("holdings");

                    b.Navigation("initialValueOrders");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
